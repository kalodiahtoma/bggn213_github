---
title: "Class 19"
author: "A07606689"
format: pdf
---



```{r}
library(datapasta)
```
Investigating pertussis cases by year

Q1. With the help of the R “addin” package datapasta assign the CDC pertussis case number data to a data frame called cdc and use ggplot to make a plot of cases numbers over time.

Pertussis is a bacterial infection that causes a severe cough. Often named "whooping cough"

Lets have a look at case numbers of Pertussis in the US. 

We can find these numbers on the [CDC website] (https://www.cdc.gov/pertussis/surv-reporting/cases-by-year.html)

```{r}
#| echo: FALSE
cdc <-data.frame(year = c(1922L,1923L,1924L,1925L,1926L,
                                         1927L,1928L,1929L,1930L,1931L,
                                         1932L,1933L,1934L,1935L,1936L,1937L,
                                         1938L,1939L,1940L,1941L,1942L,
                                         1943L,1944L,1945L,1946L,1947L,1948L,
                                         1949L,1950L,1951L,1952L,1953L,1954L,
                                         1955L,1956L,1957L,1958L,1959L,
                                         1960L,1961L,1962L,1963L,1964L,1965L,
                                         1966L,1967L,1968L,1969L,1970L,
                                         1971L,1972L,1973L,1974L,1975L,1976L,
                                         1977L,1978L,1979L,1980L,1981L,
                                         1982L,1983L,1984L,1985L,1986L,1987L,
                                         1988L,1989L,1990L,1991L,1992L,1993L,
                                         1994L,1995L,1996L,1997L,1998L,
                                         1999L,2000L,2001L,2002L,2003L,2004L,
                                         2005L,2006L,2007L,2008L,2009L,
                                         2010L,2011L,2012L,2013L,2014L,2015L,
                                         2016L,2017L,2018L,2019L,2020L,
                                         2021L),
        cases = c(107473,164191,165418,152003,
                                         202210,181411,161799,197371,166914,
                                         172559,215343,179135,265269,180518,
                                         147237,214652,227319,103188,183866,
                                         222202,191383,191890,109873,133792,
                                         109860,156517,74715,69479,120718,
                                         68687,45030,37129,60886,62786,
                                         31732,28295,32148,40005,14809,11468,
                                         17749,17135,13005,6799,7717,9718,
                                         4810,3285,4249,3036,3287,1759,
                                         2402,1738,1010,2177,2063,1623,1730,
                                         1248,1895,2463,2276,3589,4195,
                                         2823,3450,4157,4570,2719,4083,6586,
                                         4617,5137,7796,6564,7405,7298,
                                         7867,7580,9771,11647,25827,25616,
                                         15632,10454,13278,16858,27550,18719,
                                         48277,28639,32971,20762,17972,
                                         18975,15609,18617,6124,2116)
      )
      
```
```{r}
library(tidyverse)
```

```{r}
ggplot(cdc) +
  aes(x=year, y=cases) +
  geom_point() +
geom_line()
```

A tale of two vaccines (wP & aP)

Q2. Using the ggplot geom_vline() function add lines to your previous plot for the 1946 introduction of the wP vaccine and the 1996 switch to aP vaccine (see example in the hint below). What do you notice?

```{r}
ggplot(cdc) +
  aes(x=year, y=cases) +
  geom_point() +
geom_line() +
  geom_vline(xintercept =1946, color = "red") +
geom_vline(xintercept =1996, color = "blue") +
geom_vline(xintercept =2019, color = "darkgreen")
```
Q3. Describe what happened after the introduction of the aP vaccine? Do you have a possible explanation for the observed trend?

After the initial introduction of the aP vaccine there was a decrease of cases. However, the aP vaccine requires a booster (Tdap) every 10 years. The number of cases for Tdap started to increase after the 10 year period. It is expected that after 2019, the number of cases will shot up. 

#CMI-PB project

The CMI-PB project collects and makes available data on the immune response to Pertussis booster vaccination.

We will access this via the API. 
We will use the *jsonlite* package to access the data using the 'read_json()' function.

```{r}
library(jsonlite)
```
```{r}
subject <- read_json("https://www.cmi-pb.org/api/subject", simplifyVector = TRUE)
head(subject)
```
Q4. How many aP and wP infancy vaccinated subjects are in the dataset?
```{r}
table(subject$infancy_vac)
```
Q5. How many Male and Female subjects/patients are in the dataset?

```{r}
table(subject$biological_sex)
```
Q6. What is the breakdown of race and biological sex (e.g. number of Asian females, White males etc…)?

```{r}
table(subject$race, subject$biological_sex)
```
Side-Note: Working with dates

Q. Make a histogram of the subject age distribution and facet by infancy_vac

```{r}
today() - mdy("09-12-1996")
#"12-09-1996"

today() - dmy("13-01-1989")
```
```{r}
time_length( today() - ymd("1989-01-13"),  "years")
```
```{r}
subject$age <- ymd(subject$date_of_boost) - ymd(subject$year_of_birth)
subject$age_years <- time_length(subject$age, "years")
```
Q7. Using this approach determine (i) the average age of wP individuals, (ii) the average age of aP individuals; and (iii) are they significantly different?
t.test

```{r}
ap <- subject %>% filter(infancy_vac == "aP")

round( summary( time_length( ap$age, "years" ) ) )
```
```{r}
wp <- subject %>% filter(infancy_vac == "wP")

round( summary( time_length( wp$age, "years" ) ) )
```


Q8. Determine the age of all individuals at time of boost?
```{r}
ggplot(subject) + 
  aes(age_years, 
    fill=infancy_vac) + 
  facet_wrap(vars(infancy_vac), ncol = 1) +
  geom_histogram()
```

Q9. With the help of a faceted boxplot or histogram (see below), do you think these two groups are significantly different?
There are 3 main datasets in the CMI-PB project at the time of writing: 
```{r}
table(subject$dataset)
```
```{r}
specimen <- read_json("http://cmi-pb.org/api/specimen", simplifyVector = TRUE)
titer <- read_json("http://cmi-pb.org/api/v4/plasma_ab_titer", simplifyVector = TRUE)
head(specimen)
head(titer)
```
We will have a wee peak at the tables

Joining multiple tables

Q9. Complete the code to join specimen and subject tables to make a new merged data frame containing all specimen records along with their associated subject details:

I want to merge (join) the specimen and subject tables together. 
```{r}
meta <- inner_join(specimen, subject)
dim(meta)
head(meta)
```
Q10. Now using the same procedure join meta with titer data so we can further analyze this data in terms of time of visit aP/wP, male/female etc.

Now I want to join the merge (join) he titer and meta data
```{r}
abdata <- inner_join(titer, meta)
dim(abdata)
head(abdata)
```
Q11. How many specimens (i.e. entries in abdata) do we have for each isotype?

```{r}
table(abdata$isotype)
```
Q12. What are the different $dataset values in abdata and what do you notice about the number of rows for the most “recent” dataset?
skipped in class

Examine IgG Ab titer levels

```{r}
igg <- abdata %>% filter(isotype == "IgG")
```
Q13. Complete the following code to make a summary boxplot of Ab titer levels (MFI) for all antigens:
```{r}
ggplot(igg) + 
  aes(MFI_normalised, 
      antigen) + 
  geom_boxplot()
```
```{r}
oops <- abdata %>% filter(antigen=="Fim2/3")
table(oops$dataset)
```
```{r}
table(abdata$dataset)
```
Select (or fliter) for the 2021 dataset and isotype IgG. I want time course ('day_relative_to_boost') of IgG levels ('MFI_normalised') for "PT" antigen.

```{r}
igpt.21 <- abdata %>% filter(dataset=="2021_dataset", isotype=="IgG", antigen=="PT")
ggplot(igpt.21) + 
  aes(planned_day_relative_to_boost, 
     MFI_normalised, 
     col=infancy_vac) + 
  geom_point() + 
  geom_line(aes(group=subject_id), linewidth=0.5, alpha=0.5) + 
  geom_smooth(se=FALSE, span=0.4, linewidth=3) +
  geom_vline(xintercept= 0) +
geom_vline(xintercept = 14)
```
```{r}
igpt.22 <- abdata %>% filter(dataset=="2022_dataset", isotype=="IgG", antigen=="PT")
ggplot(igpt.22) + 
  aes(planned_day_relative_to_boost, 
     MFI_normalised, 
     col=infancy_vac) + 
  geom_point() + 
  geom_line(aes(group=subject_id), linewidth=0.5, alpha=0.5) + 
  geom_smooth(se=FALSE, span=0.4, linewidth=3) +
  geom_vline(xintercept= 0) +
geom_vline(xintercept = 14)
```


